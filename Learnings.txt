
1. Creating React Project.
    npm create-react-app ProjectName
    npx create-react-app projectName

    npm => Node Package manager.
        => PackageManager.
         => Package.
            1. Same as Libraries.
    
    npm-> JS.
    pip -> Python.
    nuget -> C#/.Net
    maven -> Java.

   
    npx. => Execute a package, doesnt occupy space in application.

2. Start react project.
    npm start
3. What is NPM and how to use it
4. WHat is difference between npm and npx.
5. How to create a component.
6. What is a component.
7. How to render a component.
8. import and export.
9. how react works.
10. SPA. [Single Page Application]
11. ANgular, React, Vue.




Folder Structure.
    src=> contains source code.

React -> App [js[html], css]


Component's Lifecycle.

1. Component Starts Creating.
2. Component is created.
3. Component starts rendering./ Updating DOM.
4. Compnent is rendered. / DOM is updated.
5. Component is destroyed. [Taken out of memory/ dom]
6. trendData=> component refreshes.

----C Starts Creating----Created---Rendering----Rendered.
-----------------------------------Fetch---------------------Data.

Virtual DOM. => 
    Prevent direct access to dom.
    Avoids unnecessary DOM updates.


Lifecycle hook.
States. => Box.[trendData] => trigger => refresh component.


setter functions => set data to variables.



===To learn===.
React theories.
React Architecture/Features.
Components.
Virtual DOM.
JSX.
Lifecycle hooks.
useState, 
useEffect.
Sharing data using props.

Event handling on forms.
Navigations and Routings.



